import sys
import os
import re

assert len(sys.argv) >= 3

print("hi")
path = os.path.join(os.curdir, "./day{}/{}".format(sys.argv[1], sys.argv[2]))
path = os.path.abspath(path)
print("problem: {}".format(path))

pat = r'(#include|pragma htk) "([a-zA-Z0-9_\\\/\.-]*)"'

regex = re.compile(pat)

mpath = os.path.join(path, sys.argv[2]) + ".cpp"
text = open(mpath).read()
_print = print

print("processing {}".format(mpath))


def process(fpath, depth=0):
    def print(*args, **kwargs):
        _print("\t" * depth, *args, **kwargs)

    cwd = os.path.dirname(fpath)
    print("processiing {}".format(fpath))
    text = open(fpath).read()
    matches = regex.findall(text)

    print(matches)

    for match in matches:
        # match = match[1]
        print("processing {}".format(os.path.join(path, match[1])))

        inclpath = ("{}/{}".format(cwd, match[1]))
        inclpath = os.path.normpath(inclpath)
        content = process(inclpath, depth + 1)
        pre = "/*injected contents of {}*/\n".format(match[1])
        post = "/*end of injection*/"
        text = text.replace(r'{} "{}"'.format(match[0], match[1]), pre + content + post)

    text += "///*this file was generated by MikailBag's HTK resolver (https://github.com/mikailbag/htk" + \
            " (repo under construction). It is free software distributing under GPL v2.*/"
    return text


print("emitting")
open(mpath.replace(".cpp", ".ej.cpp"), "w").write(process(mpath))
